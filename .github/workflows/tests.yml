name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: [8.2, 8.3]
        laravel: [10.*, 11.*]
        dependency-version: [prefer-stable]
        include:
          - laravel: 10.*
            testbench: 8.*
          - laravel: 11.*
            testbench: 9.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

    - name: Execute tests (Unit and Feature)
      run: vendor/bin/phpunit

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse --level=8 src/

    - name: Run PHP CS Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run --diff

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run security check
      run: vendor/bin/security-checker security:check composer.lock

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Lint PHP files
      run: vendor/bin/parallel-lint src/ tests/

  package-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run basic package check
      run: php test-package.php

    - name: Validate composer.json
      run: composer validate --strict

    - name: Check package structure
      run: |
        echo "Checking package structure..."
        php -r "
        \$required = [
            'composer.json', 'README.md', 'LICENSE.md',
            'src/CountryCodeServiceProvider.php',
            'src/Models/Country.php',
            'src/Services/CountryCodeService.php',
            'src/Facades/CountryCode.php',
            'config/country-code.php',
            'database/migrations/2024_01_01_000001_create_countries_table.php',
            'database/seeders/CountrySeeder.php'
        ];
        foreach (\$required as \$file) {
            if (!file_exists(\$file)) {
                echo \"Missing: {\$file}\n\";
                exit(1);
            }
        }
        echo \"All required files exist.\n\";
        " 