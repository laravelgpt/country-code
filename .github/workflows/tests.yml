name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.2, 8.3]
        laravel: [10.*, 11.*]
        dependency-version: [prefer-stable]

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: composer install --${{ matrix.dependency-version }} --prefer-dist --no-interaction

    - name: Execute tests (via phpunit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: :memory:
      run: vendor/bin/phpunit

  test-laravel-10:
    runs-on: ubuntu-latest

    name: Laravel 10.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: composer require "laravel/framework:^10.0" --no-interaction --prefer-stable

    - name: Execute tests (via phpunit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: :memory:
      run: vendor/bin/phpunit

  test-laravel-11:
    runs-on: ubuntu-latest

    name: Laravel 11.x

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: composer require "laravel/framework:^11.0" --no-interaction --prefer-stable

    - name: Execute tests (via phpunit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: :memory:
      run: vendor/bin/phpunit

  test-livewire:
    runs-on: ubuntu-latest

    name: Livewire Integration

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: |
        composer require "laravel/framework:^11.0" --no-interaction --prefer-stable
        composer require "livewire/livewire:^3.0" --no-interaction --prefer-stable

    - name: Execute tests (via phpunit)
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: :memory:
      run: vendor/bin/phpunit

  test-frontend-components:
    runs-on: ubuntu-latest

    name: Frontend Components

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Node.js dependencies
      run: |
        npm install -g @vue/cli
        npm install -g create-react-app

    - name: Test Vue Components
      run: |
        echo "Vue components would be tested here"
        # Add Vue component testing logic

    - name: Test React Components
      run: |
        echo "React components would be tested here"
        # Add React component testing logic

  code-quality:
    runs-on: ubuntu-latest

    name: Code Quality

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run PHP CS Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run --diff

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse

    - name: Run Laravel Pint
      run: vendor/bin/pint --test

  security:
    runs-on: ubuntu-latest

    name: Security Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, iconv, intl
        tools: composer:v2
        coverage: none

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run Security Check
      run: vendor/bin/security-checker security:check composer.lock 